#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source ynh_package_version
source ynh_detect_arch__2
source ynh_add_config
source /usr/share/yunohost/helpers

#=================================================
# LOAD SETTINGS
#=================================================
ynh_script_progression --message="Loading installation settings..."

app=$YNH_APP_INSTANCE_NAME

domain=$(ynh_app_setting_get --app=$app --key=domain)
path_url=$(ynh_app_setting_get --app=$app --key=path)
final_path=$(ynh_app_setting_get --app=$app --key=final_path)
db_name=$(ynh_app_setting_get --app=$app --key=db_name)
db_user=$db_name
port=$(ynh_app_setting_get --app=$app --key=port)

#=================================================
# CHECK VERSION
#=================================================
ynh_script_progression --message="Checking version..."

upgrade_type=$(ynh_check_app_version_changed)

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression --message="Ensuring downward compatibility..."

# If db_name doesn't exist, create it
if [ -z "$db_name" ]; then
	db_name=$(ynh_sanitize_dbid --db_name=$app)
	ynh_app_setting_set --app=$app --key=db_name --value=$db_name
fi

#=================================================
# CHECK VERSION NUMBER
#=================================================

if [ ${PACKAGE_CHECK_EXEC:-0} -eq 1 ]; then
	sleep 60
fi
abort_if_up_to_date
# previous function is what defines 'version', more precisely the 'previous version'
previous_version="${version}"

#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================
ynh_script_progression --message="Backing up the app before upgrading (may take a while)..."

# Backup the current version of the app
ynh_backup_before_upgrade
ynh_clean_setup () {
	# restore it if the upgrade fails
	ynh_restore_upgradebackup
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# CHECK THE PATH
#=================================================

# Normalize the URL path syntax
path_url=$(ynh_normalize_url_path --path_url=$path_url)

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Stopping a systemd service..."

ynh_systemd_action --service_name=$app --action="stop" --log_path=systemd

#=================================================
# MANAGE UPGRADE FROM PREVIOUS VERSION
#=================================================
ynh_script_progression --message="Managing upgrade from previous version..."

if ynh_version_gt "0.45-2" "${previous_version}" ; then
	ynh_script_progression --message="Upgrading to 0.45-2..."
	ynh_replace_string --match_string="Environment=ROOT_URL=http://127.0.0.1:$port$path_url" --replace_string="Environment=ROOT_URL=https://$domain$path_url/" --target_file="/etc/systemd/system/$app.service"
	systemctl daemon-reload
fi

if ynh_version_gt "0.45-3" "${previous_version}" ; then
	ynh_script_progression --message="Upgrading to 0.45-3..."
	yunohost service add $app --description "Wekan daemon" --log_type "systemd"
fi

if ynh_version_gt "1.07~ynh2" "${previous_version}" ; then
	ynh_script_progression --message="Upgrading to 1.07~ynh2..."

	# Replace mongodb packages
	# Assume no other app needs it >.>
	rm -f /etc/apt/sources.list.d/mongodb-org-3.2.list
	ynh_remove_app_dependencies
	ynh_install_app_dependencies "mongodb mongodb-server"
	yunohost service add $app --description "Wekan daemon" --log_type "systemd"
fi

if ynh_version_gt "2.56~ynh1" "${previous_version}" ; then
	# Create a dedicated .env config
	config_file="$final_path/.env"
	touch $config_file
fi

if ynh_version_gt "4.09~ynh2" "${previous_version}" ; then
	
	# Enabling MongoDB Authentication
	ynh_mongo_test_if_first_run

	ynh_mongo_setup_db --db_user=$db_user --db_name=$db_name
fi

# Create the permission "admin" only if it doesn't exist.
if ! ynh_permission_exists --permission="admin"
then
	ynh_script_progression --message="Upgrading Permission configuration..."

	ynh_app_setting_delete --app=$app --key=unprotected_uris

	is_public=$(ynh_app_setting_get --app=$app --key=is_public)

	if [ $is_public -eq 1 ]; then
		ynh_permission_update --permission "main" --add "visitors"
	fi

	ynh_app_setting_delete --app=$app --key=is_public

	ynh_permission_create --permission="admin"
fi

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
	ynh_script_progression --message="Upgrading source files..."
	
	# Create a temporary directory
	tmpdir="$(mktemp -d)"

	# Backup the env file in the temp dir
	cp -a "$final_path/.env" "$tmpdir/.env"

	# Remove the app directory securely
	ynh_secure_remove --file="$final_path"

	architecture=$(ynh_detect_arch)
	# Download, check integrity, uncompress and patch the source from app.src
	ynh_setup_source --dest_dir="$final_path" --source_id="$architecture"
  
	#Copy the admin saved settings from tmp directory to final path
	cp -a  "$tmpdir/.env" "$final_path/.env"
  
	# Remove the tmp directory securely
	ynh_secure_remove --file="$tmpdir"
fi

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading nginx web server configuration..."

# Create a dedicated nginx config
ynh_add_nginx_config

#=================================================
# UPGRADE DEPENDENCIES
#=================================================
ynh_script_progression --message="Upgrading dependencies..."

ynh_install_app_dependencies $pkg_dependencies
ynh_remove_nodejs
ynh_install_nodejs --nodejs_version=$nodejsversion
ynh_use_nodejs
ynh_install_mongo

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Making sure dedicated system user exists..."

# Create a dedicated user (if not existing)
ynh_system_user_create --username=$app --home_dir="$final_path"

#=================================================
# MODIFY A CONFIG FILE
#=================================================
ynh_script_progression --message="Modifying a config file..."

# Create a dedicated .env config
ynh_add_config

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression --message="Upgrading systemd configuration..."

# Create a dedicated systemd config
ynh_add_systemd_config --others_var="mongodb_servicename ynh_node"

#=================================================
# GENERIC FINALIZATION
#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================
ynh_script_progression --message="Securing files and directories..."

# Set permissions on app files
chown -R $app: "$final_path"
chmod -R 640 "$final_path"
find "$final_path" -type d -print0 | xargs -0 chmod 750

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..."

ynh_systemd_action --service_name=$app --action="start" --log_path=systemd --line_match="Started Wekan, task board"

if [ ${PACKAGE_CHECK_EXEC:-0} -eq 1 ]; then
	sleep 60
fi

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading nginx web server..."

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade of $app completed"
